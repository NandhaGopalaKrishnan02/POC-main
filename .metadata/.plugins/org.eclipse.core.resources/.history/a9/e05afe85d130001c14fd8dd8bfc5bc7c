package com.poc.AuthService.advice;

import java.util.Date;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import com.poc.AuthService.exception.ResourceNotFoundException;

@ControllerAdvice 
public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
  
	
	@ExceptionHandler(ResourceNotFoundException.class)
	public ResponseEntity<?> handleResourceNotFoundException(ResourceNotFoundException exception){
		
		ErrorDetails errorDetails = new ErrorDetails(new Date(), exception.getMessage(), HttpStatus.NOT_FOUND);
		return new ResponseEntity<>(errorDetails, HttpStatus.NOT_FOUND);
	}


	@Override
	protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,
			HttpHeaders headers, HttpStatus status, WebRequest request) {
		BindingResult bindingResult = ex.getBindingResult();
		 String errorMessage = bindingResult.getFieldError("yourFieldName").getDefaultMessage();
	
		        
	}
	
	
//	@ExceptionHandler(Exception.class)
//	public ResponseEntity<?> Exception(Exception exception,WebRequest req){
//		
//		System.out.println("Throwing Exception");
//		ErrorDetails errorDetails = new ErrorDetails(new Date(), exception.getMessage(), HttpStatus.NOT_FOUND);
//
//		return new ResponseEntity<>(errorDetails, HttpStatus.NOT_FOUND);
//		
//		
//	}
//	
//	
//	@ExceptionHandler(InternalAuthenticationServiceException.class)
//	public ResponseEntity<?> Exception(InternalAuthenticationServiceException exception,WebRequest req){
//		
//		System.out.println("Throwing InternalAuthenticationServiceException");
//		ErrorDetails errorDetails = new ErrorDetails(new Date(), exception.getMessage(), HttpStatus.NOT_FOUND);
//
//		return new ResponseEntity<>(errorDetails, HttpStatus.NOT_FOUND);
//		
//		
//	}
}
